plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    /* id 'kotlin-android-extensions' change 'kotlin-parcelize' */
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'


}

android {
    namespace 'com.example.applicationjeces'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.applicationjeces"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        dataBinding = true
        viewBinding true
    }
    kapt {
        correctErrorTypes true
    }
}

def lottieVersion = '3.7.0'
def lifecycle_version = "2.2.0"

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-firestore-ktx:24.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    /* lottie */
    implementation "com.airbnb.android:lottie:$lottieVersion"

    /* recyclerView, CardView */
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.cardview:cardview:1.0.0"

    /* Navigation */
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation "androidx.navigation:navigation-ui:2.5.3"

    /* ViewModel */
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    // Room components
    def roomVersion = '2.2.5'
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Kotlin components
    def coroutines = '1.3.4'
    def kotlin_version = "1.3.72"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    /* LiveData */
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'

    /* coroutine */
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'

    /* firestore */
//    implementation 'com.google.frebase:firebase-firestore-ktx'
//    implementation 'com.google.firebase:firebase-firestore-ktx:22.1.1'

    /* Material Design TextFiled */
    implementation 'com.google.android.material:material:1.7.0'

    /* firebase */
    implementation 'com.google.firebase:firebase-messaging-ktx:23.1.0'
    implementation 'com.google.firebase:firebase-database:19.2.0'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.google.firebase:firebase-auth:19.0.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation platform('com.google.firebase:firebase-bom:31.0.2')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'

    /* 이미지 업로드를 위한 fires*/
    implementation 'com.google.firebase:firebase-storage:20.1.0'

    /* firestore */
    implementation 'com.google.firebase:firebase-firestore:24.4.1'

    /* firestore 코루틴 */
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"

    /* ViewPager2 */
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    /* Glide Glide는 일종의 이미지 라이브러리로, 서버에 저장되어 있는 이미지 데이터를 앱에 출력할 수 있도록 도와주는 라이브러리(빠르다) */
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    /* 스플레시 */
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'  // 1.X.X 대신에 실제 버전 넘버를 넣어주세요.

    /* retrofit */
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    /* DotsIndicator */
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'

    /* 이미지 라운딩 처리 */
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    /* 코루틴 */
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2' // 버전은 가장 최신으로 확인하세요.

    /* 리사이클러뷰 스와이프 옵션 */
    implementation 'androidx.recyclerview:recyclerview:1.3.1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4' // 버전은 해당 시점의 최신 버전을 사용하세요.

    /* retrofit */
    implementation 'com.squareup.retrofit2:retrofit:2.x.y'
    implementation 'com.squareup.retrofit2:converter-gson:2.x.y'

    /* flexbox 사용 */
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    /* 위치 */
    implementation 'com.google.android.gms:play-services-location:21.0.1' // Google Location Services

}